import java.util.Collection;
import java.util.Map;
import java.util.HashMap;
import abs.frontend.delta.*;

aspect OriginalCallResolver {

    
    

  public void OriginalCall.replaceByRealCall(MethodImpl originalMethodCopy, HashMap<String, MethodImpl> deltaMap){
      EffExp call = new SyncCall(new ThisExp(), originalMethodCopy.getMethodSig().getName(), this.getParams().treeCopyNoTransform());
      // set line and column from OriginalCall node
      call.setPosition(getStartLine(), getStartColumn(), getEndLine(), getEndColumn());
      ASTNode parent = getParent();
      int i = parent.getIndexOfChild(this);
      parent.setChild(call, i);
      call.setParent(parent);
  }
  
  public void TargetedOriginalCall.replaceByRealCall(MethodImpl originalMethodCopy, HashMap<String, MethodImpl> deltaMap){
      MethodImpl methodCopy = deltaMap.get(this.getTarget().getName());
      EffExp call = new SyncCall(new ThisExp(), methodCopy.getMethodSig().getName(), this.getParams().treeCopyNoTransform());
      // set line and column from OriginalCall node
      call.setPosition(getStartLine(), getStartColumn(), getEndLine(), getEndColumn());
      ASTNode parent = getParent();
      int i = parent.getIndexOfChild(this);
      parent.setChild(call, i);
      call.setParent(parent);
  }
}
