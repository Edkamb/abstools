module Testing;

interface I { Unit m(); }
class C implements I {
	Int i = 0;
	Int j = 0;
    uses T;
    Unit n(){ this.j = this.i + 1; }
}
trait T = { Unit m(){ this.i = this.i + 1;}}
{

}


delta D;
modifies class Testing.C{
        adds Int i = 0;
        removes Unit n();
        modifies T 
        //{ 
        //    Unit m(){ println("a");}
        //}  
}


delta D2;
uses Testing;
adds class E(){
    Rat r = 1/2;
    Unit q(Int i){ 
        Rat f = 1/8; 
        this.r = i/this.s; 
        O other = new OC();
        this.aField!meth();
        other!wtf();
    }
    Int asd(Int i){ 
        Fut<Unit> f = this!q(i*100); 
        f.get; 
        return i;
    }
}


delta D3;
uses Testing;
removes class E;

productline Line;
features Feat;
delta D when Feat;
delta D2 when Feat;
delta D3 when Feat;
product Default (Feat); 

